/*Task #5:
Write a C++ program that dynamically creates a 2D matrix and provides:
=> Addition of two matrices.
=> Subtraction of two matrices.
=> Ensure safe memory handling with proper allocation/deallocation*/

#include <iostream>
using namespace std;

int** createMatrix(int rows, int cols) {
    int** matrix = new int*[rows];
    for (int i = 0; i < rows; i++) {
        matrix[i] = new int[cols];
    }
    return matrix;
}
void delete(int** matrix, int rows) {
    for (int i = 0; i < rows; i++) {
        delete[] matrix[i];
    }
    delete[] matrix;
}
void input(int** matrix, int rows, int cols) {
    cout << "Enter elements:\n";
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cin >> matrix[i][j];
        }
    }
    }
void display(int** matrix, int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }}
int** add(int** a, int** b, int rows, int cols) {
    int** result = createMatrix(rows, cols);
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result[i][j] = a[i][j] + b[i][j];
        }
    }
    return result;
}
int** subtract(int** a, int** b, int rows, int cols) {
    int** result = createMatrix(rows, cols);
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result[i][j] = a[i][j] - b[i][j];
        }
    }
    return result;}

int main() {
    int rows, cols;
    cout << "Enter number of rows: ";
    cin >> rows;
    cout << "Enter number of columns: ";
    cin >> cols;
    int** matrix1 = createMatrix(rows, cols);
    int** matrix2 = createMatrix(rows, cols);

    cout << "Matrix 1"<<endl;
    inputMatrix(matrix1, rows, cols);
    cout << "Matrix 2"<<endl;
    inputMatrix(matrix2, rows, cols);

    cout << "Matrix 1"<<endl;
    displayMatrix(matrix1, rows, cols);
    cout << "Matrix 2"<<endl;
    displayMatrix(matrix2, rows, cols);
    int** sum = addMatrix(matrix1, matrix2, rows, cols);
    cout << "Addition Result"<<endl;
    displayMatrix(sum, rows, cols);

    int** diff = subtractMatrix(matrix1, matrix2, rows, cols);
    cout << "Subtraction Result";
    displayMatrix(diff,rows, cols);

    deleteMatrix(matrix1, rows);
    deleteMatrix(matrix2, rows);
    deleteMatrix(sum, rows);
    deleteMatrix(diff, rows);

    return 0;
}
